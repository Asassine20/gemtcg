---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import ItemGrid4 from '~/components/ui/ItemGrid4.astro';
import type { Features as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 3,
  defaultIcon,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;

---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  
  <!-- ItemGrid4 Component -->
  <ItemGrid4
    items={items}
    columns={columns}
    defaultIcon={defaultIcon}
    classes={{
      container: 'gap-4 md:gap-6',
      panel:
        'rounded-lg shadow-[0_4px_30px_rgba(0,0,0,0.1)] dark:shadow-[0_4px_30px_rgba(0,0,0,0.1)] backdrop-blur border border-[#ffffff29] bg-white dark:bg-slate-900 p-6',
      icon: 'w-12 h-12 mb-6 text-primary',
      ...((classes?.items as Record<string, never>) ?? {}),
    }}
  >
    {items.map((item, index) => (
      <div key={index} class="block w-full h-full rounded-lg shadow-[0_4px_30px_rgba(0,0,0,0.1)] backdrop-blur border border-[#ffffff29] bg-white dark:bg-slate-900 p-6">
        {/* Icon rendering */}
        {item.icon || defaultIcon ? (
          <div class="w-12 h-12 mb-6 text-primary">
            {/* Render icon based on `item.icon` or fallback to `defaultIcon` */}
            <svg
              class="w-12 h-12"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <use href={`/icons/tabler-sprite.svg#${item.icon || defaultIcon}`} />
            </svg>
          </div>
        ) : null}

        {/* Feature Title */}
        <h3 class="text-xl font-bold mb-2">{item.title}</h3>

        {/* Feature Description */}
        <p class="text-slate-600 dark:text-slate-400">{item.description}</p>

        {/* Read More Button */}
        {item.buttonText && (
          <a
            href="#"
            class="mt-4 inline-block px-4 py-2 bg-primary text-white rounded-md transition-colors hover:bg-blue-700"
          >
            {item.buttonText}
          </a>
        )}
      </div>
    ))}
  </ItemGrid4>
</WidgetWrapper>
